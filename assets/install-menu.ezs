
check_cryptos(){
	if [ -r ${LS_CRYPTOS}/${CODE_NAME}/spec.ezs ];
		then
			source ${LS_CRYPTOS}/${CODE_NAME}/spec.ezs
			mkdir -p ${MN_DATA}/${CRYPTO_NAME}/
		else
			echo "$fgRed This crypto is not yet supported, please contact us for updates ! $txReset"
			break ;
		fi
	}

input_cryptos(){	
		input_codename
		input_genkey
		input_txhash
		input_txid	
	}

create_config_file(){
	cd source ${LS_CRYPTOS}/$CODE_NAME/spec.ezs ;
	mkdir -p ${MN_DATA}/${CRYPTO_NAME}/ ;
	# crypto config
			cp -p ${EZ_CONFIG}/config.env  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|RPCCOIN|$CRYPTO_NAME-RPC|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|RPCPASS|$rd_passwd|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|RPCPORT|$RPC_PORT|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|MN_GENKEY|$mn_genkey|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|MN_ADDR|$mn_address|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|MN_PORT|$MN_PORT|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
				sed -i "s|CODE_NAME|${CODE_NAME}|g"  ${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
	# masternode config
			cp -p ${EZ_CONFIG}/masternode.env  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
				sed -i "s|MN_ALIAS|$(hostname)|g"  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
				sed -i "s|MN_ADDR|$mn_address|g"  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
				sed -i "s|MN_PORT|$MN_PORT|g"  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
				sed -i "s|MN_GENKEY|$mn_genkey|g"  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
				sed -i "s|TX_HASH|$tx_hash|g"  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
				sed -i "s|TX_ID|$tx_id|g"  ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
 }

install_update_wallet(){
	input_code_name
	check_cryptos
	source ${LS_CRYPTOS}/${CODE_NAME}/spec.ezs
	if [ -f /root/ezmn/daemon/${MN_DAEMON} ]; then
		echo $fgYellow " Wallet $CRYPTO_NAME has been install" 
		read -s -p  " Do you want update Wallet $CRYPTO_NAME $txReset [y/N] ?" choice
    	case "$choice" in
        [yY])
            rm /ezmn/daemon/${MN_DAEMON}
            build_daemon &> /root/ezmn/logs/install_${CODE_NAME}.log
            return
            ;;
        *)
            return ;;
    	esac
    	else
	    	echo $fgGreen " Compile $CRYPTO_NAME daemon " $txReset
			build_daemon &> /root/ezmn/logs/install_${CODE_NAME}.log
			if [ -f /root/ezmn/daemon/${MN_DAEMON} ]; then
				touch /root/ezmn/installed/${CODE_NAME}
				echo $fgGreen " Compile daemon success !"  $txReset
				else 
				echo $fgRed " Compile daemon has been fail ! " $txReset
				fi
		fi
	}

update_config(){
	input_code_name
	source ${LS_CRYPTOS}/${CODE_NAME}/spec.ezs
	rm /${MN_DATA}/${CRYPTO_NAME}/${CRYPTO_NAME}.conf ;
	rm ${MN_DATA}/${CRYPTO_NAME}/masternode.conf ;
	create_config	
}
auto_install_masternode(){
	input_cryptos
	install_wallet
	create_config
}



################## INSTALL MENU ############################
### DISPLAY ###
display_install_menu(){
	tput clear	
	main_banner
	cat << _main_menu
 1) AUTO INSTALL MASTERNODE (2+4)
 2) INSTALL OR UPDATE DAEMON
 4) CREATE FILE CONFIG
 5) UPDATE FILE CONFIG
 9) BACK
 0) EXIT
_main_menu
}
### ACTION ###

function action_install_menu(){
	    local choice
	    read -p "$fgGreen $txBold Enter choice [1-5] or [Q]uit : $txReset" choice
			case $choice in
				1)  auto_install_masternode ;;
				2)  install_update_wallet ;;
				4)  input_cryptos && create_config ;;
				5)  update_config ;;
				9)  return  ;;
			 [0qQ])  exit 0 ;;
		      *)	echo $txBold $fgYellow  " The wrong selection, please select again !" $txReset ;;
			 esac
			
	}
