source /usr/local/ezmn/assets/source.ezs ;
mn_overview(){
	tput cup 9 0 && tput ed
	tput cup 9 0
	tput bold
	divider==============================================================
	divider=$divider$divider
	header="%-1s %-10s %-10s %-15s %-25s\n"
	format="%-1s %-10s %-10.1f %-15s %-25s\n"
	width=100
	printf "$header" " " "CRYPTO " "BALANCE" "VERSION" "STATUS MN"
	printf "%$width.${width}s\n" "$divider"

	DAEMON_RUN=$(ls -1 /root/ezmn/running/ | sed -e 's/\.pid$//')
	for CODE_NAME  in $DAEMON_RUN  ; do
		source /usr/local/ezmn/cryptos/${CODE_NAME}/spec.ezs		
		if [ "$GROUP" == "1" ] ; then
			source /usr/local/ezmn/cmd/CMD-${GROUP}.ezs
			OV_STATUS=$(${MN_STATUS} | jshon -e "notCapableReason")
			OV_STAKING=$(${WL_STAKTING} | jshon -e "staking")
			OV_VERSION=$(${WL_INFO} | jshon -e "version" | sed -e 's/\"$//' )
		else [ "$GROUP" == "2" ];
			source /usr/local/ezmn/cmd/CMD-${GROUP}.ezs
			OV_STATUS=$(${MN_STATUS} | jshon -e "message")
			OV_STAKING=$(${WL_STAKTING} | jshon -e "staking status")
			OV_VERSION=$(${WL_INFO} | jshon -e "version" | sed -e 's/\"$//' )
		fi
	  	BALANCE=$(${WL_BALANCE})

		if [ "$OV_STATUS" == '""' ] || [ "$OV_STATUS" == '"Masternode successfully started"' ]; then 

		STATUS="successfully"
		else   
		STATUS="$OV_STATUS"
		fi
		printf "$format" " " "${CRYPTO_NAME}" "$BALANCE" "${OV_VERSION}" "$STATUS" 
		printf "%$width.${width}s\n" "$divider$divider"		
	done
 	}

 auto_deamon_all(){
	if [ -z "$(ls -A /root/ezmn/installed/ )" ] ; then
		echo "$fgYellow $txBold No crypto is installed, Please install crypto before start daemon ! $txReset" 
		return ;
	else 
	source /usr/local/ezmn/assets/source.ezs
            list_ins=$(ls -1 /root/ezmn/installed/ )			
            for CODE_NAME in $list_ins; do
			source /usr/local/ezmn/cryptos/${CODE_NAME}/spec.ezs
			source /usr/local/ezmn/cmd/CMD-${GROUP}.ezs
			stt=$(ps auxw | grep $MN_DAEMON | grep -v grep)
			if [ stt != 0 ]; then
				echo -e ""
				s_crypto 
				${DAEMON_START}
             else 
				echo -e ""
                echo "$CRYPTO_NAME daemon already running! $txReset"
        fi
		done
    fi
	}
############################################################
install_menu(){
	s_install_menu
	display_install_menu
	action_install_menu 
 }

wallet_menu(){
	s_wallet_menu
	display_wallet_menu
	action_wallet_menu
 }

 masternode_menu(){
 	s_masternode_menu
	display_masternode_menu
	action_masternode_menu
 }

report_balance(){
	tput clear
	main_banner
	divider===============================
	divider=$divider$divider
	width=55
	header="%-2s %-15s %-10s %-25s\n"
	format="%-2s %-15s %-10.2f %-25s\n"
	printf "%$width.${width}s\n" "$divider"
	if [ -z "$(ls -A /root/ezmn/report/ )" ]; then
		echo "$fgRed $txBold File balance not found ! $txReset " && return ;
	else
		echo -e "$txBold $fgGreen Please cryptos you want report or [Q]uit : $txReset"
		list_ins=$(ls -1 /root/ezmn/report/ | sed -e 's/\.csv$//')
		select CODE_NAME in $list_ins; do
		if [ -n "$CODE_NAME" ]; then
            source ${LS_CRYPTOS}/${CODE_NAME}/spec.ezs
			source $DIR_EZMN/cmd/CMD-${GROUP}.ezs
                LS_BALANCE=$(cat /root/ezmn/report/${CODE_NAME}.csv | awk -F "\"* ; \"*" '{print $1, $2}')
                printf "$header" "${COIN_NAME}"
                printf "%$width.${width}s\n" "$divider"
                printf "$format" "$LS_BALANCE"
				printf ""
		else [ $CODE_NAME !='q' ]
			exit 0 ;
		fi
		done
		printf "%$width.${width}s\n" "$divider"
	fi
}

auto_start(){
	echo " w8 update"
 }

license_key(){
	echo "check license"
 }
report(){
	echo " w8 update"
}
### DISPLAY ###
display_main_menu(){
	tput cup 9 0 && tput ed
	tput cup 9 0
	cat << _main_menu
 1) OVERVIEW MASTERNODE
 2) AUTO START ALL
 3) INSTALL MENU
 4) MASTERNODE MENU
 5) WALLET MENU 
 6) REPORT
 7) LICENSE KEY
 8) UPDATE
 0) EXIT
_main_menu
 echo $txReset
 }
### ACTION ###

function action_main_menu(){
		
		local choice
	    read -p "$fgGreen $txBold Enter choice [1-6] or [Q]uit : $txReset" choice
			case $choice in
				1) mn_overview ;;
				2) auto_deamon_all ;;
				3) install_menu ;;
				4) masternode_menu;;
				5) wallet_menu ;; 
				6) report_balance ;;
				7) license_key ;;	
				8) update_ezmn ;;
			 [0qQ])  exit 0;;
		      *)	s_input && wrong_key ;;
			 esac
			 pause
 }
############################################################

